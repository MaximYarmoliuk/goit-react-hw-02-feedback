{"version":3,"sources":["components/Statistics/Statistic.module.css","components/Statistics/Statistic.js","components/FeedbackOption/FeedbackOption.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js","components/FeedbackOption/FeedbackOption.module.css","components/Notification/Notification.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","goodMark","neutralMark","badMark","totalMark","percentageGood","percentageNeutral","percentageBad","FeedbackOptions","options","onLeaveFeedback","map","option","index","key","type","onClick","Section","title","children","Notification","message","App","state","handleIncrement","setState","prevState","countPositiveFeedbackPercentage","Math","round","countTotalFeedback","Object","values","reduce","a","b","this","positiveFeedback","FeedbackOption","keys","Component","ReactDOM","render","document","querySelector"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,SAAW,4BAA4B,QAAU,2BAA2B,YAAc,+BAA+B,UAAY,6BAA6B,eAAiB,kCAAkC,kBAAoB,qCAAqC,cAAgB,mC,2KCqBjSC,MAlBf,YAAuE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBAC7C,OAAO,6BACH,uBAAGC,UAAWC,IAAOC,UAArB,SAAsCP,GACtC,uBAAGK,UAAWC,IAAOE,aAArB,YAA4CP,GAC5C,uBAAGI,UAAWC,IAAOG,SAArB,QAAoCP,GACpC,uBAAGG,UAAWC,IAAOI,WAArB,UAAwCP,GACvCA,EAAQ,GAAK,uBAAGE,UAAWD,EAAqB,GAAKE,IAAOK,eAAiBP,EAAoB,GAAIE,IAAOM,kBAAoBN,IAAOO,eAA1H,sBAA6JT,EAA7J,O,gBCgBPU,MAtBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,6BACGD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACX,4BACEd,UAAWC,IAAOY,GAClBE,IAAKD,EACLE,KAAK,SACLC,QAAS,kBAAMN,EAAgBE,KAE9BA,QCGIK,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,yBAAKpB,UAAU,WACb,4BAAKmB,GACJC,I,gBCSQC,MAZf,YAAkC,IAAXC,EAAU,EAAVA,QACrB,OACE,6BACE,uBAAGtB,UAAWC,IAAOqB,SAAUA,KCDhBC,E,2MACnBC,MAAQ,CACN7B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP4B,gBAAkB,SAAAT,GAChB,EAAKU,UAAS,SAAAC,GACZ,OAAO,eAAGX,EAAOW,EAAUX,GAAQ,O,EAIvCY,gCAAkC,SAAA9B,GAChC,OAAO+B,KAAKC,MAAO,EAAKN,MAAM7B,KAAOG,EAAS,M,EAGhDiC,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKT,OAAOU,QAAO,SAASC,EAAGC,GAClD,OAAOD,EAAIC,M,wEAKb,IAAMtC,EAAQuC,KAAKN,qBACbO,EAAmBD,KAAKT,gCAAgC9B,GAE9D,OACE,6BACE,kBAAC,EAAD,CAASqB,MAAM,yBACb,kBAACoB,EAAD,CACE7B,QAASsB,OAAOQ,KAAKH,KAAKb,OAC1Bb,gBAAiB0B,KAAKZ,mBAG1B,kBAAC,EAAD,CAASN,MAAM,cACZrB,EAAQ,EACP,kBAAC,EAAD,CACEH,KAAM0C,KAAKb,MAAM7B,KACjBC,QAASyC,KAAKb,MAAM5B,QACpBC,IAAKwC,KAAKb,MAAM3B,IAChBC,MAAOA,EACPC,mBAAoBuC,IAGtB,kBAAC,EAAD,CAAchB,QAAQ,4B,GA7CDmB,aCFjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W,kBCHhDrD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,IAAM,8B,kBCAtGD,EAAOC,QAAU,CAAC,QAAU,iC","file":"static/js/main.ea8103af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"goodMark\":\"Statistic_goodMark__29SYC\",\"badMark\":\"Statistic_badMark__1gJsj\",\"neutralMark\":\"Statistic_neutralMark__qgjcT\",\"totalMark\":\"Statistic_totalMark__2KPpR\",\"percentageGood\":\"Statistic_percentageGood__DjzdA\",\"percentageNeutral\":\"Statistic_percentageNeutral__3iTUN\",\"percentageBad\":\"Statistic_percentageBad__lLExy\"};","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"./Statistic.module.css\"\r\n\r\nfunction Statistics ({good, neutral, bad, total, positivePercentage}) {\r\n    return(<div>\r\n        <p className={styles.goodMark}>Good: {good}</p>\r\n        <p className={styles.neutralMark}>Neutral: {neutral}</p>\r\n        <p className={styles.badMark}>Bad: {bad}</p>\r\n        <p className={styles.totalMark}>Total: {total}</p>\r\n        {total > 0 && <p className={positivePercentage > 70 ? styles.percentageGood : positivePercentage> 40 ?styles.percentageNeutral : styles.percentageBad}>Positive feedback: {positivePercentage}%</p>}\r\n      </div>)\r\n}\r\n\r\nStatistics.propTypes= {\r\n    good: propTypes.number.isRequired,\r\n    neutral: propTypes.number.isRequired,\r\n    bad: propTypes.number.isRequired,\r\n    total: propTypes.number.isRequired,\r\n    positivePercentage: propTypes.number.isRequired\r\n}\r\n\r\nexport default Statistics;","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOption.module.css\";\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      {options.map((option, index) => (\r\n        <button\r\n          className={styles[option]}\r\n          key={index}\r\n          type=\"button\"\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: propTypes.arrayOf(propTypes.string).isRequired,\r\n  onLeaveFeedback: propTypes.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <div className=\"Section\">\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes={\r\n    title: propTypes.string.isRequired,\r\n    children: propTypes.object.isRequired\r\n}\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"./Notification.module.css\"\r\n\r\nfunction Notification({message}) {\r\n  return (\r\n    <div>\r\n      <p className={styles.message}>{message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: propTypes.string.isRequired\r\n}\r\n\r\nexport default Notification;","import React, { Component } from \"react\";\r\nimport Statictics from \"./Statistics/Statistic\";\r\nimport FeedbackOptions from \"./FeedbackOption/FeedbackOption\";\r\nimport Section from \"./Section/Section\";\r\nimport Notification from \"./Notification/Notification\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  };\r\n\r\n  handleIncrement = type => {\r\n    this.setState(prevState => {\r\n      return { [type]: prevState[type] + 1 };\r\n    });\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = total => {\r\n    return Math.round((this.state.good / total) * 100);\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return Object.values(this.state).reduce(function(a, b) {\r\n      return a + b;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const total = this.countTotalFeedback();\r\n    const positiveFeedback = this.countPositiveFeedbackPercentage(total);\r\n\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={Object.keys(this.state)}\r\n            onLeaveFeedback={this.handleIncrement}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {total > 0 ? (\r\n            <Statictics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={total}\r\n              positivePercentage={positiveFeedback}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"good\":\"FeedbackOption_good__2To82\",\"neutral\":\"FeedbackOption_neutral__28w6V\",\"bad\":\"FeedbackOption_bad__HLHvG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1hMne\"};"],"sourceRoot":""}