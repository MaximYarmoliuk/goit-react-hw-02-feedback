{"version":3,"sources":["components/statistics/Statistic.module.css","components/statistics/Statistic.js","components/feedback-option/Feedback-option.js","components/section/Section.js","components/notification/Notification.js","components/App.js","index.js","components/feedback-option/Feedback-option.module.css","components/notification/Notification.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","goodMark","neutralMark","badMark","totalMark","percentageGood","percentageNeutral","percentageBad","FeedbackOptions","options","onLeaveFeedback","type","onClick","Section","title","children","Notification","message","App","state","positiveFeedback","handleIncrement","setState","prevState","countPositiveFeedbackPercentage","Math","round","countTotalFeedback","Object","values","reduce","a","b","this","keys","Component","ReactDOM","render","document","querySelector"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,SAAW,4BAA4B,QAAU,2BAA2B,YAAc,+BAA+B,UAAY,6BAA6B,eAAiB,kCAAkC,kBAAoB,qCAAqC,cAAgB,mC,2KCqBjSC,MAlBf,YAAuE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBAC7C,OAAO,6BACH,uBAAGC,UAAWC,IAAOC,UAArB,SAAsCP,GACtC,uBAAGK,UAAWC,IAAOE,aAArB,YAA4CP,GAC5C,uBAAGI,UAAWC,IAAOG,SAArB,QAAoCP,GACpC,uBAAGG,UAAWC,IAAOI,WAArB,UAAwCP,GACvCA,EAAQ,GAAK,uBAAGE,UAAWD,EAAqB,GAAKE,IAAOK,eAAiBP,EAAoB,GAAIE,IAAOM,kBAAoBN,IAAOO,eAA1H,sBAA6JT,EAA7J,O,gBCePU,MArBf,YAAyD,IAA9BC,EAA6B,EAA7BA,QAAUC,EAAmB,EAAnBA,gBACnC,OACE,6BACE,4BAAQX,UAAWC,IAAOC,SAAUU,KAAK,SAASC,QAAS,kBAAMF,EAAgBD,EAAQ,MAAzF,QAGA,4BAAQV,UAAWC,IAAOE,YAAaS,KAAK,SAASC,QAAS,kBAAMF,EAAgBD,EAAQ,MAA5F,WAGA,4BAAQV,UAAWC,IAAOG,QAASQ,KAAK,SAASC,QAAS,kBAAMF,EAAgBD,EAAQ,MAAxF,SCISI,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,yBAAKhB,UAAU,WACb,4BAAKe,GACJC,I,gBCSQC,MAZf,YAAkC,IAAXC,EAAU,EAAVA,QACrB,OACE,6BACE,uBAAGlB,UAAWC,IAAOiB,SAAUA,KCDhBC,E,2MACnBC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,MAAQ,E,EACRuB,iBAAmB,E,EACnBN,MAAQ,CAAC,wBAAyB,c,EAElCO,gBAAkB,SAAAV,GAChB,EAAKW,UAAS,SAAAC,GACZ,OAAO,eAAGZ,EAAOY,EAAUZ,GAAQ,O,EAIvCa,gCAAkC,WAChC,EAAKJ,iBAAmBK,KAAKC,MAAO,EAAKP,MAAMzB,KAAO,EAAKG,MAAS,M,EAGtE8B,mBAAqB,WACnB,EAAK9B,MAAQ+B,OAAOC,OAAO,EAAKV,OAAOW,QAAO,SAASC,EAAGC,GACxD,OAAOD,EAAIC,M,wEAOb,OAFAC,KAAKN,qBACLM,KAAKT,kCAEH,6BACE,kBAAC,EAAD,CAASV,MAAM,yBACb,kBAAC,EAAD,CACEL,QAASmB,OAAOM,KAAKD,KAAKd,OAC1BT,gBAAiBuB,KAAKZ,mBAGxB,kBAAC,EAAD,CAASP,MAAO,cACfmB,KAAKpC,MAAQ,EACZ,kBAAC,EAAD,CACEH,KAAMuC,KAAKd,MAAMzB,KACjBC,QAASsC,KAAKd,MAAMxB,QACpBC,IAAKqC,KAAKd,MAAMvB,IAChBC,MAAOoC,KAAKpC,MACZC,mBAAoBmC,KAAKb,mBAG3B,kBAAC,EAAD,CAAcH,QAAS,4B,GAhDFkB,aCFjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W,kBCHhDhD,EAAOC,QAAU,CAAC,SAAW,kCAAkC,YAAc,qCAAqC,QAAU,mC,kBCA5HD,EAAOC,QAAU,CAAC,QAAU,iC","file":"static/js/main.4d2ed911.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"goodMark\":\"Statistic_goodMark__2LFrb\",\"badMark\":\"Statistic_badMark__g8Div\",\"neutralMark\":\"Statistic_neutralMark__1kgJv\",\"totalMark\":\"Statistic_totalMark__2ZnMI\",\"percentageGood\":\"Statistic_percentageGood__UyLfE\",\"percentageNeutral\":\"Statistic_percentageNeutral__3Iz1v\",\"percentageBad\":\"Statistic_percentageBad__14Imu\"};","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"./Statistic.module.css\"\r\n\r\nfunction Statistics ({good, neutral, bad, total, positivePercentage}) {\r\n    return(<div>\r\n        <p className={styles.goodMark}>Good: {good}</p>\r\n        <p className={styles.neutralMark}>Neutral: {neutral}</p>\r\n        <p className={styles.badMark}>Bad: {bad}</p>\r\n        <p className={styles.totalMark}>Total: {total}</p>\r\n        {total > 0 && <p className={positivePercentage > 70 ? styles.percentageGood : positivePercentage> 40 ?styles.percentageNeutral : styles.percentageBad}>Positive feedback: {positivePercentage}%</p>}\r\n      </div>)\r\n}\r\n\r\nStatistics.propTypes= {\r\n    good: propTypes.number.isRequired,\r\n    neutral: propTypes.number.isRequired,\r\n    bad: propTypes.number.isRequired,\r\n    total: propTypes.number.isRequired,\r\n    positivePercentage: propTypes.number.isRequired\r\n}\r\n\r\nexport default Statistics;","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from './Feedback-option.module.css'\r\n\r\nfunction FeedbackOptions({ options,  onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      <button className={styles.goodMark} type=\"button\" onClick={() => onLeaveFeedback(options[0])} >\r\n        Good\r\n      </button>\r\n      <button className={styles.neutralMark} type=\"button\" onClick={() => onLeaveFeedback(options[1])} >\r\n        Neutral\r\n      </button>\r\n      <button className={styles.badMark} type=\"button\" onClick={() => onLeaveFeedback(options[2])} >\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: propTypes.arrayOf(propTypes.string).isRequired,\r\n    onLeaveFeedback: propTypes.func.isRequired\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <div className=\"Section\">\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes={\r\n    title: propTypes.string.isRequired,\r\n    children: propTypes.object.isRequired\r\n}\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"./Notification.module.css\"\r\n\r\nfunction Notification({message}) {\r\n  return (\r\n    <div>\r\n      <p className={styles.message}>{message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: propTypes.string.isRequired\r\n}\r\n\r\nexport default Notification;","import React, { Component } from \"react\";\r\nimport Statictics from \"./statistics/Statistic\";\r\nimport FeedbackOptions from \"./feedback-option/Feedback-option\";\r\nimport Section from \"./section/Section\";\r\nimport Notification from \"./notification/Notification\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  };\r\n\r\n  total = 0;\r\n  positiveFeedback = 0;\r\n  title = ['Please leave feedback', 'Statistics']\r\n\r\n  handleIncrement = type => {\r\n    this.setState(prevState => {\r\n      return { [type]: prevState[type] + 1 };\r\n    });\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    this.positiveFeedback = Math.round((this.state.good / this.total) * 100);\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    this.total = Object.values(this.state).reduce(function(a, b) {\r\n      return a + b;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage();\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={Object.keys(this.state)}\r\n            onLeaveFeedback={this.handleIncrement}\r\n          />\r\n          </Section>\r\n          <Section title =\"Statistics\">\r\n          {this.total > 0 ? (\r\n            <Statictics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={this.total}\r\n              positivePercentage={this.positiveFeedback}\r\n            />\r\n          ) : (\r\n            <Notification message={\"No feedback given\"} />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"goodMark\":\"Feedback-option_goodMark__2TCJG\",\"neutralMark\":\"Feedback-option_neutralMark__2FzM9\",\"badMark\":\"Feedback-option_badMark__3cWCB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__Dtmmq\"};"],"sourceRoot":""}